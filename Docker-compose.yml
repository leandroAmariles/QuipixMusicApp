version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  keycloak:
    image: keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8088:8080"
    command:
      - start-dev

  app:
    build: musicApp
    ports:
      - "8082:8082"
    depends_on:
      - keycloak

#  backend-1:
#    build:
#      context: musicApp
#    ports:
#      - "8080:8080"
#    networks:
#      - app-quipux-network
#    environment:
#      DB_URL: jdbc:h2:tcp://h2-database:9092/mem:testdb
#      DB_USER: sa
#      DB_PASSWORD: password
#
#  backend-2:
#    build:
#      context: musicAppPersist
#    ports:
#      - "8081:8081"
#    networks:
#      - app-quipux-network
#    environment:
#      DB_URL: jdbc:h2:tcp://h2-database:9092/mem:testdb
#      DB_USER: sa
#      DB_PASSWORD: password

#  h2-database:
#    image: oscarfonts/h2:latest
#    container_name: h2-database
#    ports:
#      - "9092:9092"
#    environment:
#      H2_OPTIONS: "-ifExists -mem"
#      H2_TCP_PORT: 9092

#networks:
#  app-quipux-network:
#    driver: bridge